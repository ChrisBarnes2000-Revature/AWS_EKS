kind: Deployment
apiVersion: apps/v1
metadata:
  name: jenkins-dev
  labels:
    pod: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: jenkins
  template:
    metadata:
      labels:
        pod: jenkins
    spec:
      containers:
      - resources:
          requests:
            cpu: "50m"
            memory: "256Mi"
          limits:
            cpu: "2000m"
            memory: "4096Mi"
        name: jenkins
        image: jenkins/jenkins:alpine # for non-alpine images: jenkins/jenkins:latest
        ports:
          - name: http-port
            containerPort: 80
          # - name: discovery-port
          #   containerPort: 50000
      #   volumeMounts:
      #     - name: jenkins-vol
      #       mountPath: /var/jenkins_vol
      # volumes:
      #   - name: jenkins-vol
      #     emptyDir: {}
---
# jenkins http port for ui
kind: Service
apiVersion: v1
metadata:
  name: jenkins-ui
  namespace: jenkins
spec:
  # type: NodePort
  selector:
    app: jenkins
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: http
---
# master <-> agent communication
# kind: Service
# apiVersion: v1
# metadata:
#   name: jenkins-discovery
#   namespace: jenkins
# spec:
#   # type: ClusterIP
#   # selector:
#   #   app: master
#   ports:
#     - protocol: TCP
#       port: 50000
#       targetPort: 50000
#       name: agents
# ---
# Ingress-Nginx
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: jenkins
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /jenkins
        pathType: Prefix
        backend:
          service:
            name: jenkins-ui
            port:
              number: 8080
      # - path: "/jenkins-discovery"
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: jenkins-discovery
      #       port:
      #         number: 80


